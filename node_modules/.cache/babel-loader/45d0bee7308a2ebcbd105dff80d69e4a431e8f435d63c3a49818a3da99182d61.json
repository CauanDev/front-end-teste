{"ast":null,"code":"import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'CountChardSplit',\n  props: {\n    users: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    users() {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      this.createChart();\n    }\n  },\n  mounted() {\n    this.createChart();\n  },\n  methods: {\n    createChart() {\n      const maleUsers = this.users.filter(user => user.implementar.sex === 'M');\n      const femaleUsers = this.users.filter(user => user.implementar.sex === 'F');\n      const maleDates = maleUsers.map(user => user.created_at);\n      const femaleDates = femaleUsers.map(user => user.created_at);\n      const maleCountsByDate = maleDates.reduce((acc, date) => {\n        acc[date] = (acc[date] || 0) + 1;\n        return acc;\n      }, {});\n      const femaleCountsByDate = femaleDates.reduce((acc, date) => {\n        acc[date] = (acc[date] || 0) + 1;\n        return acc;\n      }, {});\n      const labels = Array.from(new Set([...Object.keys(maleCountsByDate), ...Object.keys(femaleCountsByDate)])).sort();\n      const maleData = labels.map(label => maleCountsByDate[label] || 0);\n      const femaleData = labels.map(label => femaleCountsByDate[label] || 0);\n      const ctx = this.$refs.userChart.getContext('2d');\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Masculino',\n            data: maleData,\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\n            borderColor: 'rgba(54, 162, 235)',\n            borderWidth: 1\n          }, {\n            label: 'Feminino',\n            data: femaleData,\n            backgroundColor: 'rgba(255, 99, 132, 0.8)',\n            borderColor: 'rgba(255, 99, 132)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","props","users","type","Array","required","data","chart","watch","destroy","createChart","mounted","methods","maleUsers","filter","user","implementar","sex","femaleUsers","maleDates","map","created_at","femaleDates","maleCountsByDate","reduce","acc","date","femaleCountsByDate","labels","from","Set","Object","keys","sort","maleData","label","femaleData","ctx","$refs","userChart","getContext","datasets","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero"],"sources":["C:\\Users\\Usu√°rio\\Documents\\teste-pratico\\front-end-teste\\src\\components\\chards\\CountChardSplit.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <canvas ref=\"userChart\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Chart, registerables } from 'chart.js';\r\n  \r\n  Chart.register(...registerables);\r\n  \r\n  export default {\r\n    name: 'CountChardSplit',\r\n    props: {\r\n      users: {\r\n        type: Array,\r\n        required: true,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        chart: null,\r\n      };\r\n    },\r\n    watch: {\r\n      users() {\r\n        if (this.chart) {\r\n          this.chart.destroy();\r\n        }\r\n        this.createChart();\r\n      }\r\n    },\r\n    mounted() {\r\n      this.createChart();\r\n    },\r\n    methods: {\r\n      createChart() {\r\n        const maleUsers = this.users.filter(user => user.implementar.sex === 'M');\r\n        const femaleUsers = this.users.filter(user => user.implementar.sex === 'F');\r\n  \r\n        const maleDates = maleUsers.map(user => user.created_at);\r\n        const femaleDates = femaleUsers.map(user => user.created_at);\r\n  \r\n        const maleCountsByDate = maleDates.reduce((acc, date) => {\r\n          acc[date] = (acc[date] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n  \r\n        const femaleCountsByDate = femaleDates.reduce((acc, date) => {\r\n          acc[date] = (acc[date] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n  \r\n        const labels = Array.from(new Set([...Object.keys(maleCountsByDate), ...Object.keys(femaleCountsByDate)])).sort();\r\n        const maleData = labels.map(label => maleCountsByDate[label] || 0);\r\n        const femaleData = labels.map(label => femaleCountsByDate[label] || 0);\r\n  \r\n        const ctx = this.$refs.userChart.getContext('2d');\r\n  \r\n        this.chart = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: 'Masculino',\r\n                data: maleData,\r\n                backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n                borderColor: 'rgba(54, 162, 235)',\r\n                borderWidth: 1\r\n              },\r\n              {\r\n                label: 'Feminino',\r\n                data: femaleData,\r\n                backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n                borderColor: 'rgba(255, 99, 132)',\r\n                borderWidth: 1\r\n              }\r\n            ]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}