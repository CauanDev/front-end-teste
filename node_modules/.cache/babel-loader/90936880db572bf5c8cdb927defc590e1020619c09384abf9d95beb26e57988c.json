{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Oi\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FechamentoCaixa = _resolveComponent(\"FechamentoCaixa\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_FechamentoCaixa)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_createVNode","_component_FechamentoCaixa"],"sources":["C:\\Users\\Usu√°rio\\Documents\\projeto_diagnostico\\client\\src\\views\\DiagnosticoController.vue"],"sourcesContent":["<template>\r\n    <h1>Oi</h1>\r\n    <FechamentoCaixa/>\r\n\r\n\r\n</template>\r\n<script>\r\nimport http from \"@/services/http.js\"\r\nimport FechamentoCaixa from \"../components/diagnostico/FechamentoCaixa.vue\";\r\nexport default{\r\n    name:\"DiagnosticoController\",\r\n    components: FechamentoCaixa,\r\n    data() {\r\n    return {\r\n      slug: null,\r\n      infResults:{\r\n        name:'',\r\n        template_id:'',\r\n        values: [],\r\n      }\r\n    };\r\n  },\r\n  methods:{\r\n   async findTemplate(slug){ \r\n    try {\r\n        \r\n        const template = await http.post('/result',{\"slug\": `${slug}`});\r\n        const results = template.data.user[0]\r\n        console.log(results)\r\n        this.infResults.name = results.name\r\n        this.infResults.values = results.values\r\n        this.infResults.template_id = results.template_id\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n   }\r\n  },\r\n  created() {\r\n    this.slug = this.$route.params.id;\r\n    this.findTemplate(this.slug);\r\n  }\r\n};\r\n</script>"],"mappings":";gCACIA,mBAAA,CAAW,YAAP,IAAE;;;uBADVC,mBAAA,CAAAC,SAAA,SACIC,UAAW,EACXC,YAAA,CAAkBC,0BAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}