{"ast":null,"code":"import TableView from \"@/components/Table/TableView.vue\";\nimport http from '@/services/http.js';\nimport TitleView from \"../components/Title/TitleView.vue\";\nimport { format } from 'date-fns';\nexport default {\n  name: \"ListTemplates\",\n  components: {\n    TableView,\n    TitleView\n  },\n  data() {\n    return {\n      results: [],\n      openModal: true,\n      modalContent: {},\n      template: {\n        name: ''\n      },\n      newTemplate: {}\n    };\n  },\n  methods: {\n    async getNameUser(id) {\n      try {\n        const response = await http.get('/users/' + id);\n        return response.data.user.name;\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    },\n    async getResults() {\n      try {\n        const response = await http.post('/template');\n        const results = response.data.users.data;\n        this.results = await Promise.all(results.map(async item => {\n          const nomeDiagnostico = await this.getNameTemplate(item.template_id);\n          // Aqui você pode retornar o objeto desejado com todas as informações que você precisa\n          return {\n            nome: item.name,\n            created_at: format(new Date(item.created_at), 'dd/MM/yyyy'),\n            tipoDiagnostico: nomeDiagnostico,\n            slug: item.slug,\n            implementar: {\n              name: item.name,\n              values: item.values,\n              id: item.id\n            }\n          };\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    showDetails(details) {\n      console.log(details);\n      this.modalContent = details;\n      this.newResults.name = details.name;\n      this.newResults.values = details.values;\n      this.diagnostico.name = details.name;\n      this.diagnostico.values = details.values;\n      this.openModal = false;\n    },\n    async atualizar() {\n      var count = 0;\n      if (this.modalContent.name != this.diagnostico.name) {\n        this.newResults.name = this.diagnostico.name;\n      } else count++;\n      if (this.modalContent.values != this.diagnostico.values) {\n        this.newResults.values = this.diagnostico.values;\n      } else count++;\n      if (count != 2) {\n        try {\n          console.log(this.newResults);\n          const data = await http.put('/results/' + this.modalContent.id, this.newResults);\n          console.log(data);\n          alert(\"Diagnóstico Atualizado com sucesso\");\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    async apagar() {\n      try {\n        await http.delete('/results/' + this.modalContent.id, this.newResults);\n        alert(\"Diagnóstico Apagado com sucesso\");\n      } catch (error) {\n        console.log(error.response);\n      }\n    }\n  },\n  mounted() {\n    this.getResults();\n  }\n};","map":{"version":3,"names":["TableView","http","TitleView","format","name","components","data","results","openModal","modalContent","template","newTemplate","methods","getNameUser","id","response","get","user","error","console","getResults","post","users","Promise","all","map","item","nomeDiagnostico","getNameTemplate","template_id","nome","created_at","Date","tipoDiagnostico","slug","implementar","values","showDetails","details","log","newResults","diagnostico","atualizar","count","put","alert","apagar","delete","mounted"],"sources":["C:\\Users\\Usuário\\Documents\\projeto_diagnostico\\client\\src\\views\\ListTemplates.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <TitleView title=\"Templates\"/>\r\n    </div>\r\n    <div class=\" flex justify-center mt-10\">\r\n       <TableView :headers=\"['Nome Template','Data Criação','Usuário','Ver Detalhes']\"  @showDetails=\"showDetails\" :body=\"results\" class=\"w-[50%]\"/>\r\n    </div>\r\n  \r\n    <div id=\"default-modal\" :class=\"{'hidden':openModal}\" class=\" fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div class=\"relative p-4 w-full max-w-2xl max-h-full\">\r\n          <!-- Modal content -->\r\n          <div class=\"relative bg-white rounded-lg shadow\">\r\n              <!-- Modal header -->\r\n              <div class=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n                  <h3 class=\"text-xl font-semibold text-gray-900 \">\r\n                      Alterar {{modalContent.name}}\r\n                  </h3>\r\n                  <button type=\"button\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-black-200 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center \" data-modal-hide=\"default-modal\" @click=\"openModal=!openModal\">\r\n                      <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                          <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n                      </svg>\r\n                      <span class=\"sr-only\">Close modal</span>\r\n                  </button>\r\n              </div>\r\n              <!-- Modal body -->\r\n              <div class=\"p-4 md:p-5 space-y-4\">\r\n                <div>\r\n                  <label  class=\"block mb-2 text-sm font-medium text-gray-900 \">Alterar Nome</label>\r\n                  <input v-model=\"diagnostico.name\" type=\"text\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o novo nome\"  />\r\n                </div>\r\n  \r\n                <div>\r\n                  <label  class=\"block mb-2 text-sm font-medium text-gray-900 \">Alterar Valores</label>\r\n                  <p class=\"text-xs text-gray-500\">**Sequencia de Valores**</p>\r\n                  <p class=\"text-xs text-gray-500\">QuantidadeTFL-TempoFecharCaixa-TempoFecharPlanilha-TempoConferirCaixa-SalarioOperador-SalarioGerente-SalarioLoterico</p>\r\n                  <input v-model=\"diagnostico.values\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" placeholder=\"Digite os novos Valores\"  />\r\n                </div>\r\n              </div>\r\n  \r\n              <div class=\"flex items-center justify-center p-2 border-t border-gray-200 rounded-b\">\r\n                <button type=\"button\" class=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\" @click=\"atualizar\">Gravar</button>\r\n                <button type=\"button\" class=\"focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\" @click=\"apagar\">Apagar</button>\r\n  \r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  import TableView from \"@/components/Table/TableView.vue\";\r\n  import http from '@/services/http.js';\r\n  import TitleView from \"../components/Title/TitleView.vue\";\r\n  import { format } from 'date-fns'; \r\n\r\n  export default {\r\n    name: \"ListTemplates\",\r\n    components: {\r\n      TableView, TitleView\r\n    },\r\n    data() {\r\n      return {\r\n        results: [],\r\n        openModal: true,\r\n        modalContent:{},\r\n        template:{\r\n        name: '',\r\n        },\r\n        newTemplate:{   \r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n    async getNameUser(id) {\r\n      try {\r\n \r\n        const response = await http.get('/users/'+id,);\r\n        return response.data.user.name\r\n      } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n      }\r\n    },\r\n  \r\n    async getResults() {\r\n      try {\r\n        const response = await http.post('/template');\r\n        const results = response.data.users.data;\r\n\r\n        this.results = await Promise.all(results.map(async item => {\r\n          const nomeDiagnostico = await this.getNameTemplate(item.template_id);\r\n          // Aqui você pode retornar o objeto desejado com todas as informações que você precisa\r\n          return {\r\n            nome: item.name,\r\n            created_at: format(new Date(item.created_at), 'dd/MM/yyyy'),\r\n            tipoDiagnostico: nomeDiagnostico,\r\n            slug:item.slug,\r\n            implementar: {\r\n              name: item.name,\r\n              values: item.values,\r\n              id: item.id\r\n            }\r\n          };\r\n        }));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n      showDetails(details) {\r\n        console.log(details)\r\n        this.modalContent = details;\r\n        this.newResults.name = details.name\r\n        this.newResults.values = details.values\r\n        this.diagnostico.name = details.name;\r\n        this.diagnostico.values = details.values;\r\n        this.openModal=false;\r\n    \r\n      },\r\n      async atualizar(){\r\n        var count=0;\r\n        if(this.modalContent.name!=this.diagnostico.name )\r\n        {\r\n          this.newResults.name = this.diagnostico.name;\r\n        }  \r\n        else count++\r\n        if(this.modalContent.values!=this.diagnostico.values)\r\n        {\r\n          this.newResults.values = this.diagnostico.values;\r\n        } else count++\r\n        if(count !=2){\r\n        try {\r\n          console.log(this.newResults)\r\n         const data = await http.put('/results/'+this.modalContent.id,this.newResults);\r\n         console.log(data)\r\n         alert(\"Diagnóstico Atualizado com sucesso\")\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n        } \r\n      },\r\n     async apagar(){\r\n      try {\r\n            await http.delete('/results/'+this.modalContent.id,this.newResults);\r\n            alert(\"Diagnóstico Apagado com sucesso\")\r\n          } catch (error) {\r\n            console.log(error.response)\r\n          }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getResults();\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}