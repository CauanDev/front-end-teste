{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'SalaryChartSplit',\n  props: {\n    users: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    users() {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      this.createChart();\n    }\n  },\n  mounted() {\n    this.createChart();\n  },\n  methods: {\n    createChart() {\n      const maleUsers = this.users.filter(user => user.implementar.sex === 'M');\n      const femaleUsers = this.users.filter(user => user.implementar.sex === 'F');\n      const totalMaleSalary = maleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\n      const totalFemaleSalary = femaleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\n      const averageMaleSalary = maleUsers.length ? totalMaleSalary / maleUsers.length : 0;\n      const averageFemaleSalary = femaleUsers.length ? totalFemaleSalary / femaleUsers.length : 0;\n      const ctx = this.$refs.userChart.getContext('2d');\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['Masculino', 'Feminino'],\n          datasets: [{\n            label: 'Média Salarial por Sexo',\n            data: [averageMaleSalary, averageFemaleSalary],\n            backgroundColor: ['#007bff', '#dc3545'],\n            borderColor: ['#007bff', '#dc3545'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","props","users","type","Array","required","data","chart","watch","destroy","createChart","mounted","methods","maleUsers","filter","user","implementar","sex","femaleUsers","totalMaleSalary","reduce","sum","parseFloat","salary","totalFemaleSalary","averageMaleSalary","length","averageFemaleSalary","ctx","$refs","userChart","getContext","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero"],"sources":["/home/kelvin/Documentos/front-end-teste/src/components/chards/SalaryChardSplit.vue"],"sourcesContent":["<template>\n    <div>\n      <canvas ref=\"userChart\"></canvas>\n    </div>\n  </template>\n  \n  <script>\n  import { Chart, registerables } from 'chart.js';\n  \n  Chart.register(...registerables);\n  \n  export default {\n    name: 'SalaryChartSplit',\n    props: {\n      users: {\n        type: Array,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        chart: null,\n      };\n    },\n    watch: {\n      users() {\n        if (this.chart) {\n          this.chart.destroy();\n        }\n        this.createChart();\n      },\n    },\n    mounted() {\n      this.createChart();\n    },\n    methods: {\n      createChart() {\n        const maleUsers = this.users.filter(user => user.implementar.sex === 'M');\n        const femaleUsers = this.users.filter(user => user.implementar.sex === 'F');\n  \n        const totalMaleSalary = maleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\n        const totalFemaleSalary = femaleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\n  \n        const averageMaleSalary = maleUsers.length ? totalMaleSalary / maleUsers.length : 0;\n        const averageFemaleSalary = femaleUsers.length ? totalFemaleSalary / femaleUsers.length : 0;\n  \n        const ctx = this.$refs.userChart.getContext('2d');\n  \n        this.chart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: ['Masculino', 'Feminino'],\n            datasets: [{\n              label: 'Média Salarial por Sexo',\n              data: [averageMaleSalary, averageFemaleSalary],\n              backgroundColor: ['#007bff', '#dc3545'],\n              borderColor: ['#007bff', '#dc3545'],\n              borderWidth: 1,\n            }],\n          },\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true,\n              },\n            },\n          },\n        });\n      },\n    },\n  };\n  </script>"],"mappings":"AAOE,SAASA,KAAK,EAAEC,aAAY,QAAS,UAAU;AAE/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAEhC,eAAe;EACbE,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLN,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACK,KAAK,EAAE;QACd,IAAI,CAACA,KAAK,CAACE,OAAO,CAAC,CAAC;MACtB;MACA,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,WAAW,CAAC,CAAC;EACpB,CAAC;EACDE,OAAO,EAAE;IACPF,WAAWA,CAAA,EAAG;MACZ,MAAMG,SAAQ,GAAI,IAAI,CAACX,KAAK,CAACY,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,WAAW,CAACC,GAAE,KAAM,GAAG,CAAC;MACzE,MAAMC,WAAU,GAAI,IAAI,CAAChB,KAAK,CAACY,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,WAAW,CAACC,GAAE,KAAM,GAAG,CAAC;MAE3E,MAAME,eAAc,GAAIN,SAAS,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAKM,GAAE,GAAIC,UAAU,CAACP,IAAI,CAACC,WAAW,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC;MACrG,MAAMC,iBAAgB,GAAIN,WAAW,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAKM,GAAE,GAAIC,UAAU,CAACP,IAAI,CAACC,WAAW,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC;MAEzG,MAAME,iBAAgB,GAAIZ,SAAS,CAACa,MAAK,GAAIP,eAAc,GAAIN,SAAS,CAACa,MAAK,GAAI,CAAC;MACnF,MAAMC,mBAAkB,GAAIT,WAAW,CAACQ,MAAK,GAAIF,iBAAgB,GAAIN,WAAW,CAACQ,MAAK,GAAI,CAAC;MAE3F,MAAME,GAAE,GAAI,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,UAAU,CAAC,IAAI,CAAC;MAEjD,IAAI,CAACxB,KAAI,GAAI,IAAIV,KAAK,CAAC+B,GAAG,EAAE;QAC1BzB,IAAI,EAAE,KAAK;QACXG,IAAI,EAAE;UACJ0B,MAAM,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC;UACjCC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,yBAAyB;YAChC5B,IAAI,EAAE,CAACmB,iBAAiB,EAAEE,mBAAmB,CAAC;YAC9CQ,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;YACvCC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;YACnCC,WAAW,EAAE;UACf,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}