{"ast":null,"code":"import { ref } from 'vue';\nimport { defineStore } from \"pinia\";\nimport httpAuth from '@/services/httpAuth.js';\nexport const useAuthStorate = defineStore('auth', () => {\n  const token = ref(localStorage.getItem(\"token\"));\n  const user = ref(JSON.parse(localStorage.getItem(\"user\")));\n  function setToken(tokenValue) {\n    localStorage.setItem('token', tokenValue);\n    token.value = tokenValue;\n  }\n  function setUser(userValue) {\n    localStorage.setItem('user', JSON.stringify(userValue)); // Converta para string antes de armazenar\n    user.value = userValue;\n  }\n  async function checkToken() {\n    try {\n      const tokenAuth = 'Bearer ' + token.value;\n      const {\n        data\n      } = await httpAuth.get('/auth/verify', {\n        headers: {\n          Authorization: tokenAuth\n        }\n      });\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return {\n    setToken,\n    setUser,\n    checkToken\n  };\n});","map":{"version":3,"names":["ref","defineStore","httpAuth","useAuthStorate","token","localStorage","getItem","user","JSON","parse","setToken","tokenValue","setItem","value","setUser","userValue","stringify","checkToken","tokenAuth","data","get","headers","Authorization","error","console","log"],"sources":["C:/Users/UsuÃ¡rio/Documents/projeto_diagnostico/client/src/stores/auth.js"],"sourcesContent":["import { ref } from 'vue';\r\nimport { defineStore } from \"pinia\";\r\nimport httpAuth from '@/services/httpAuth.js';\r\nexport const useAuthStorate = defineStore('auth',()=>{\r\n    const token = ref(localStorage.getItem(\"token\"));\r\n    const user = ref(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n    function setToken(tokenValue){\r\n        localStorage.setItem('token',tokenValue);\r\n        token.value = tokenValue;\r\n    }\r\n\r\n    function setUser(userValue){\r\n        localStorage.setItem('user', JSON.stringify(userValue)); // Converta para string antes de armazenar\r\n        user.value = userValue;\r\n    }\r\n    \r\n    async function checkToken(){\r\n        try {\r\n            const tokenAuth  = 'Bearer '+ token.value;\r\n            const {data} = await httpAuth.get('/auth/verify',{\r\n                headers:{\r\n                    Authorization: tokenAuth \r\n                }\r\n            })\r\n            return data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return {\r\n        setToken,\r\n        setUser,\r\n        checkToken\r\n    }\r\n});\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,MAAMC,cAAc,GAAGF,WAAW,CAAC,MAAM,EAAC,MAAI;EACjD,MAAMG,KAAK,GAAGJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAChD,MAAMC,IAAI,GAAGP,GAAG,CAACQ,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EAE1D,SAASI,QAAQA,CAACC,UAAU,EAAC;IACzBN,YAAY,CAACO,OAAO,CAAC,OAAO,EAACD,UAAU,CAAC;IACxCP,KAAK,CAACS,KAAK,GAAGF,UAAU;EAC5B;EAEA,SAASG,OAAOA,CAACC,SAAS,EAAC;IACvBV,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACQ,SAAS,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;IACzDR,IAAI,CAACM,KAAK,GAAGE,SAAS;EAC1B;EAEA,eAAeE,UAAUA,CAAA,EAAE;IACvB,IAAI;MACA,MAAMC,SAAS,GAAI,SAAS,GAAEd,KAAK,CAACS,KAAK;MACzC,MAAM;QAACM;MAAI,CAAC,GAAG,MAAMjB,QAAQ,CAACkB,GAAG,CAAC,cAAc,EAAC;QAC7CC,OAAO,EAAC;UACJC,aAAa,EAAEJ;QACnB;MACJ,CAAC,CAAC;MACF,OAAOC,IAAI;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ;EACA,OAAO;IACHb,QAAQ;IACRI,OAAO;IACPG;EACJ,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}