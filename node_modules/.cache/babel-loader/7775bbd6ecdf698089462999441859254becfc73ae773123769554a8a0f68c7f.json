{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"userChart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["/home/kelvin/Documentos/front-end-teste/src/components/chards/SalaryChardSplit.vue"],"sourcesContent":["<template>\n    <div>\n      <canvas ref=\"userChart\"></canvas>\n    </div>\n  </template>\n  \n  <script>\n  import { Chart, registerables } from 'chart.js';\n  \n  Chart.register(...registerables);\n  \n  export default {\n    name: 'SalaryChartSplit',\n    props: {\n      users: {\n        type: Array,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        chart: null,\n      };\n    },\n    watch: {\n      users() {\n        if (this.chart) {\n          this.chart.destroy();\n        }\n        this.createChart();\n      },\n    },\n    mounted() {\n      this.createChart();\n    },\n    methods: {\n      createChart() {\n        const maleUsers = this.users.filter(user => user.implementar.sex === 'M');\n        const femaleUsers = this.users.filter(user => user.implementar.sex === 'F');\n  \n        const totalMaleSalary = maleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\n        const totalFemaleSalary = femaleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\n  \n        const averageMaleSalary = maleUsers.length ? totalMaleSalary / maleUsers.length : 0;\n        const averageFemaleSalary = femaleUsers.length ? totalFemaleSalary / femaleUsers.length : 0;\n  \n        const ctx = this.$refs.userChart.getContext('2d');\n  \n        this.chart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: ['Masculino', 'Feminino'],\n            datasets: [{\n              label: 'MÃ©dia Salarial por Sexo',\n              data: [averageMaleSalary, averageFemaleSalary],\n              backgroundColor: ['#007bff', '#dc3545'],\n              borderColor: ['#007bff', '#dc3545'],\n              borderWidth: 1,\n            }],\n          },\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true,\n              },\n            },\n          },\n        });\n      },\n    },\n  };\n  </script>"],"mappings":";;EAEcA,GAAG,EAAC;AAAW;;uBADzBC,mBAAA,CAEM,cADJC,mBAAA,CAAiC,UAAjCC,UAAiC,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}