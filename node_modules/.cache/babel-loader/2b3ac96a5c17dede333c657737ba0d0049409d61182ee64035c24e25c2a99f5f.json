{"ast":null,"code":"import TableView from \"@/components/Table/TableView.vue\";\nimport http from '@/services/http.js';\nimport TitleView from \"../components/Title/TitleView.vue\";\nexport default {\n  name: \"DashBoard\",\n  components: {\n    TableView,\n    TitleView\n  },\n  data() {\n    return {\n      results: [],\n      openModal: false,\n      modalContent: {},\n      diagnostico: {\n        name: '',\n        values: ''\n      },\n      newResults: {}\n    };\n  },\n  methods: {\n    async getNameTemplate(id) {\n      try {\n        const request = {\n          \"id\": id\n        };\n        console.log(JSON.stringify(request));\n        const response = await http.post('/template', JSON.stringify(request));\n        return response.data.templates.name;\n      } catch (error) {\n        console.error(error);\n        throw error; // ou retorne um valor padrão ou trate o erro de alguma forma\n      }\n    },\n    async getResults() {\n      try {\n        const response = await http.get('/results');\n        const results = response.data.templates.data;\n        const teste = await this.getNameTemplate(1);\n        console.log(teste);\n        // Aqui usamos Promise.all para esperar todas as chamadas getNameTemplate\n        this.results = await Promise.all(results.map(async item => {\n          const nomeDiagnostico = await this.getNameTemplate(item.id);\n          console.log(nomeDiagnostico);\n          // Aqui você pode retornar o objeto desejado com todas as informações que você precisa\n          return {\n            nomeLoterica: item.name,\n            values: item.values,\n            tipoDiagnostico: nomeDiagnostico,\n            slug: item.slug,\n            implementar: {\n              name: item.name,\n              values: item.values\n            }\n          };\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    showDetails(details) {\n      this.modalContent = details;\n      this.newResults = details;\n      this.diagnostico = details;\n      this.openModal = false;\n    },\n    async atualizar() {\n      var count = 0;\n      if (this.modalContent.name != this.diagnostico.name && !/\\s/.test(this.diagnostico.name)) {\n        this.newResults.name = this.diagnostico.name;\n      } else count++;\n      if (this.modalContent.values != this.diagnostico.values && !/\\s/.test(this.diagnostico.values)) {\n        this.newResults.values = this.user.values;\n      } else count++;\n      if (count != 2) {\n        try {\n          await http.put('/users/' + this.modalContent.id, this.newResults);\n          alert(\"Usuário Atualizado com sucesso\");\n          window.location.reload();\n        } catch (error) {}\n      }\n    },\n    apagar() {}\n  },\n  mounted() {\n    this.getResults();\n  }\n};","map":{"version":3,"names":["TableView","http","TitleView","name","components","data","results","openModal","modalContent","diagnostico","values","newResults","methods","getNameTemplate","id","request","console","log","JSON","stringify","response","post","templates","error","getResults","get","teste","Promise","all","map","item","nomeDiagnostico","nomeLoterica","tipoDiagnostico","slug","implementar","showDetails","details","atualizar","count","test","user","put","alert","window","location","reload","apagar","mounted"],"sources":["C:\\Users\\Usuário\\Documents\\projeto_diagnostico\\client\\src\\views\\DashBoard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n  <TitleView title=\"Resultados Diagnosticos\"/>\r\n  </div>\r\n  <div class=\" flex justify-center mt-10\">\r\n     <TableView :headers=\"['Nome Lotérica','Valores','Tipo de Diagnóstico','Link','Ver Detalhes']\"  @showDetails=\"showDetails\" :body=\"results\" class=\"w-[50%]\"/>\r\n  </div>\r\n\r\n  <div id=\"default-modal\" :class=\"{'hidden':openModal}\" class=\" fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n    <div class=\"relative p-4 w-full max-w-2xl max-h-full\">\r\n        <!-- Modal content -->\r\n        <div class=\"relative bg-white rounded-lg shadow\">\r\n            <!-- Modal header -->\r\n            <div class=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n                <h3 class=\"text-xl font-semibold text-gray-900 \">\r\n                    Alterar {{modalContent.name}}\r\n                </h3>\r\n                <button type=\"button\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-black-200 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center \" data-modal-hide=\"default-modal\" @click=\"openModal=!openModal\">\r\n                    <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                        <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n                    </svg>\r\n                    <span class=\"sr-only\">Close modal</span>\r\n                </button>\r\n            </div>\r\n            <!-- Modal body -->\r\n            <div class=\"p-4 md:p-5 space-y-4\">\r\n              <div>\r\n                <label  class=\"block mb-2 text-sm font-medium text-gray-900 \">Alterar Nome</label>\r\n                <input v-model=\"newResults.name\" type=\"text\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o novo nome\"  />\r\n              </div>\r\n\r\n              <div>\r\n                <label  class=\"block mb-2 text-sm font-medium text-gray-900 \">Alterar Valores</label>\r\n                <p class=\"text-xs text-gray-500\">**Sequencia de Valores**</p>\r\n                <p class=\"text-xs text-gray-500\">QuantidadeTFL-TempoFecharCaixa-TempoFecharPlanilha-TempoConferirCaixa-SalarioOperador-SalarioGerente-SalarioLoterico</p>\r\n                <input v-model=\"newResults.values\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" placeholder=\"Digite os novos Valores\"  />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"flex items-center justify-center p-2 border-t border-gray-200 rounded-b\">\r\n              <button type=\"button\" class=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\" @click=\"atualizar\">Gravar</button>\r\n              <button type=\"button\" class=\"focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\" @click=\"apagar\">Apagar</button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport TableView from \"@/components/Table/TableView.vue\";\r\nimport http from '@/services/http.js';\r\nimport TitleView from \"../components/Title/TitleView.vue\";\r\n\r\nexport default {\r\n  name: \"DashBoard\",\r\n  components: {\r\n    TableView, TitleView\r\n  },\r\n  data() {\r\n    return {\r\n      results: [],\r\n      openModal: false,\r\n      modalContent:{},\r\n      diagnostico:{\r\n      name: '',\r\n      values: ''\r\n      },\r\n      newResults:{   \r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n  async getNameTemplate(id) {\r\n    try {\r\n      const request = {\r\n        \"id\":id\r\n      }\r\n      console.log(JSON.stringify(request))\r\n      const response = await http.post('/template',JSON.stringify(request));\r\n      return response.data.templates.name\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error; // ou retorne um valor padrão ou trate o erro de alguma forma\r\n    }\r\n  },\r\n\r\n  async getResults() {\r\n    try {\r\n      const response = await http.get('/results');\r\n      const results = response.data.templates.data;\r\n      const teste =await this.getNameTemplate(1);\r\n      console.log(teste)\r\n      // Aqui usamos Promise.all para esperar todas as chamadas getNameTemplate\r\n      this.results = await Promise.all(results.map(async item => {\r\n        const nomeDiagnostico = await this.getNameTemplate(item.id);\r\n        console.log(nomeDiagnostico)\r\n        // Aqui você pode retornar o objeto desejado com todas as informações que você precisa\r\n        return {\r\n          nomeLoterica: item.name,\r\n          values: item.values,\r\n          tipoDiagnostico: nomeDiagnostico,\r\n          slug:item.slug,\r\n          implementar: {\r\n            name: item.name,\r\n            values: item.values\r\n          }\r\n        };\r\n      }));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  },\r\n    showDetails(details) {\r\n      this.modalContent = details;\r\n      this.newResults = details\r\n      this.diagnostico = details;\r\n      this.openModal = false;\r\n    },\r\n    async atualizar(){\r\n      var count=0;\r\n      \r\n      if(this.modalContent.name!=this.diagnostico.name && !/\\s/.test(this.diagnostico.name) )\r\n      {\r\n        this.newResults.name = this.diagnostico.name;\r\n      }  \r\n      else count++\r\n      if(this.modalContent.values!=this.diagnostico.values && !/\\s/.test(this.diagnostico.values) )\r\n      {\r\n        this.newResults.values = this.user.values;\r\n      } else count++\r\n\r\n      if(count !=2){\r\n      try {\r\n       await http.put('/users/'+this.modalContent.id,this.newResults);\r\n       alert(\"Usuário Atualizado com sucesso\")\r\n       window.location.reload();\r\n      } catch (error) {\r\n      }\r\n      } \r\n    },\r\n    apagar(){\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getResults();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}