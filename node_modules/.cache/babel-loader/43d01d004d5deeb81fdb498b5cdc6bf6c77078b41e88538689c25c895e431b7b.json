{"ast":null,"code":"import http from '@/services/http.js';\nimport TitleView from '../components/Title/TitleView.vue';\nimport TableView from '../components/Table/TableView.vue';\nimport LoadingCircle from '../components/loading/LoadingCircle.vue';\nexport default {\n  name: 'ListServices',\n  components: {\n    TitleView,\n    TableView,\n    LoadingCircle\n  },\n  data() {\n    return {\n      tooltip: false,\n      average: false,\n      filter: {},\n      loading: false,\n      services: [],\n      copyServices: [],\n      headers: [\"Nome do Serviço\", \"Valor\", \"Feito Em\", \"Mecânico Responsável\", \"Mais Detalhes\"],\n      sex: 'A',\n      startDate: '',\n      endDate: '',\n      allWorkers: [],\n      modalUpdate: false,\n      modalFilter: false,\n      modalUser: false,\n      openModal: true,\n      newUser: {},\n      modalContent: '',\n      service: {}\n    };\n  },\n  methods: {\n    close() {\n      this.modalContent = '', this.openModal = true;\n      this.modalUser = false;\n      this.modalFilter = false;\n      this.modalUpdate = false;\n    },\n    openFilterModal() {\n      this.modalFilter = true;\n      this.openModal = false;\n    },\n    async getResults() {\n      try {\n        this.loading = true;\n        const data = await http.get('/all-services');\n        const workers = await http.get('/workers-all');\n        this.allWorkers = workers.data.workers;\n        this.setServices(data.data.services);\n        this.loading = false;\n      } catch (error) {\n        this.loading = false;\n        console.log(error.response);\n      }\n    },\n    openUserModal() {\n      this.user = {\n        name: '',\n        password: '',\n        email: ''\n      }, this.modalUser = true;\n      this.openModal = false;\n    },\n    addUser() {\n      console.log(this.user);\n    },\n    showDetails(details) {\n      this.modalContent = details;\n      this.newUser.name = details.name;\n      this.newUser.email = details.email;\n      this.newUser.password = details.password;\n      this.user.name = details.name;\n      this.user.email = details.email;\n      this.openModal = false;\n      this.modalUpdate = true;\n    },\n    async atualizar() {\n      var count = 0;\n      if (this.modalContent.name != this.user.name) {\n        this.newUser.name = this.user.name;\n      } else count++;\n      if (this.modalContent.email != this.user.email && !/\\s/.test(this.user.email)) {\n        this.newUser.email = this.user.email;\n      } else count++;\n      if (this.modalContent.password != this.user.password && this.user.password != '') {\n        this.newUser.password = this.user.password;\n      } else count++;\n      if (count != 3) {\n        try {\n          this.loading = true;\n          await http.put('/users/' + this.modalContent.id, this.newUser);\n          alert(\"Usuário Atualizado com sucesso\");\n          this.loading = false;\n          window.location.reload();\n        } catch (error) {\n          this.loading = false;\n        }\n      }\n    },\n    async apagar() {\n      try {\n        this.loading = true;\n        await http.delete('/users/' + this.modalContent.id, this.newUser);\n        alert(\"Usuário Apagado com sucesso\");\n        this.loading = false;\n        window.location.reload();\n      } catch (error) {\n        this.loading = false;\n      }\n    },\n    async setServices(array) {\n      const promises = array.map(async user => {\n        let workerName = await this.getWorkerName(user.worker_id);\n        return {\n          name: user.name_service,\n          email: \"R$\" + user.price,\n          created_at: user.date_service,\n          worker_name: workerName.name,\n          implementar: {\n            name: user.name,\n            email: user.email,\n            id: user.id,\n            password: user.password\n          }\n        };\n      });\n      this.services = await Promise.all(promises);\n      this.copyServices = this.services;\n    },\n    async setFilter() {\n      this.loading = true;\n      if (Object.keys(this.filter).length === 0 || this.filter.startDate > this.filter.endDate) {\n        alert('Por Favor Preencha Corretamente');\n      } else {\n        let copy = this.services;\n        try {\n          const data = await http.post('/filter-services', this.filter);\n          if (this.filter.average) {\n            this.headers = [\"Média entre Revisões\", \"Nome Carro\", \"Mais Detalhes\"];\n            this.services = data.data.map((user, index) => {\n              return {\n                \"avarage\": user.average_days,\n                \"car_name\": user.car_name.model + \" \" + user.car_name.brand,\n                implementar: {\n                  name: copy[index].name\n                }\n              };\n            });\n          } else {\n            this.services = this.copyServices;\n            this.setServices(data.data);\n            this.headers = [\"Nome do Serviço\", \"Valor\", \"Feito Em\", \"Mecânico Responsável\", \"Mais Detalhes\"];\n          }\n        } catch (error) {\n          console.log(error);\n        }\n        this.close();\n      }\n      this.loading = false;\n    },\n    async getWorkerName(id) {\n      const data = await http.get('/worker/' + id);\n      return data.data;\n    }\n  },\n  watch: {\n    minAge(newVal) {\n      this.minAge = newVal.replace(/\\D+/g, '');\n    },\n    maxAge(newVal) {\n      this.maxAge = newVal.replace(/\\D+/g, '');\n    },\n    filterName(newVal) {\n      this.filterName = newVal.replace(/\\d+/g, '');\n    }\n  },\n  mounted() {\n    this.getResults();\n  }\n};","map":{"version":3,"names":["http","TitleView","TableView","LoadingCircle","name","components","data","tooltip","average","filter","loading","services","copyServices","headers","sex","startDate","endDate","allWorkers","modalUpdate","modalFilter","modalUser","openModal","newUser","modalContent","service","methods","close","openFilterModal","getResults","get","workers","setServices","error","console","log","response","openUserModal","user","password","email","addUser","showDetails","details","atualizar","count","test","put","id","alert","window","location","reload","apagar","delete","array","promises","map","workerName","getWorkerName","worker_id","name_service","price","created_at","date_service","worker_name","implementar","Promise","all","setFilter","Object","keys","length","copy","post","index","average_days","car_name","model","brand","watch","minAge","newVal","replace","maxAge","filterName","mounted"],"sources":["C:\\Users\\Usuário\\Documents\\teste-pratico\\front-end-teste\\src\\views\\ListServices.vue"],"sourcesContent":["<template>\r\n<LoadingCircle v-if=\"loading\"/>\r\n     \r\n     <div>\r\n     <TitleView title=\"Revisões\"/>\r\n     </div>\r\n     <div>\r\n       <div class=\"flex justify-center w-full mt-10\">\r\n         <button type=\"button\" class=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"openUserModal\" :disabled=\"loading\">Adicionar Revisão</button> \r\n         <button type=\"button\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"openFilterModal\" :disabled=\"loading\">Aplicar Filtros</button>\r\n         <button type=\"button\" class=\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2\" @click=\"openChardModal\" :disabled=\"loading\">Visualizar Gráficos</button>\r\n        </div>\r\n     </div>\r\n     <div class=\"flex justify-center max-h-[420px] overflow-y-auto\">\r\n      <TableView :headers=\"headers\" :body=\"services\" @showDetails=\"showDetails\" class=\"w-[50%]\"/>  \r\n     </div>\r\n   \r\n     <div id=\"default-modal\" :class=\"{'hidden': openModal}\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n       <div class=\"relative p-4 w-full max-w-2xl max-h-full\">\r\n           <div class=\"relative bg-white rounded-lg shadow\" >\r\n               <div class=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n                 <div v-if=\"modalFilter\">\r\n                   <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                     Aplicar Filtros\r\n                   </h3>                \r\n                 </div>\r\n                 <div v-if=\"modalUser\">\r\n                   <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                     Criar Propietário\r\n                   </h3>                \r\n                 </div>\r\n                 <div v-if=\"modalUpdate\">\r\n                   <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                     Alterar {{ modalContent.name }}\r\n                   </h3>                \r\n                 </div>\r\n   \r\n                   <button type=\"button\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-black-200 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center\" data-modal-hide=\"default-modal\" @click=\"close\">\r\n                       <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                           <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\" />\r\n                       </svg>\r\n                       <span class=\"sr-only\" >Close modal</span>\r\n                   </button>\r\n               </div>            \r\n               <div class=\"p-4 md:p-5 space-y-4\">\r\n                 <div v-if=\"modalUser\"> \r\n                   <div>\r\n                       <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Nome</label>\r\n                       <input v-model=\"service.name\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o novo nome\" />\r\n                   </div>\r\n                   <div>\r\n                       <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Senha</label>\r\n                       <input v-model=\"service.password\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite a nova senha\" />\r\n                   </div>\r\n                   <div>\r\n                       <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Email</label>\r\n                       <input v-model=\"service.email\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o novo email\" />\r\n                   </div>\r\n                   <div>\r\n                        <label  class=\"block text-sm font-medium text-gray-900 \">Mecânico Responsável:</label>\r\n                         <select v-model=\"service.worker\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\r\n                           <option v-for=\"worker in allWorkers\" :key=\"worker.id\" :value=\"worker.name\">\r\n                            {{ worker.name }}\r\n                          </option>\r\n                         </select>\r\n                    </div>\r\n                    <div class=\"flex flex-col \">    \r\n                           <label for=\"startDate\"\r\n                           class=\"text-sm font-medium text-gray-700\">Data Da Revisão</label>\r\n                           <input type=\"date\" :max=\"new Date()\"  @input=\"filter.startDate = $event.target.value\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                         </div>\r\n                 </div>\r\n                 <div v-if=\"modalUpdate\">\r\n                   <div>\r\n                       <label class=\"block mb-2 text-sm font-medium text-gray-900\">Alterar Nome</label>\r\n                       <input v-model=\"user.name\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o novo nome\" />\r\n                   </div>\r\n                   <div>\r\n                       <label class=\"block mb-2 text-sm font-medium text-gray-900\">Alterar Senha</label>\r\n                       <input v-model=\"user.password\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite a nova senha\" />\r\n                   </div>\r\n                   <div>\r\n                       <label class=\"block mb-2 text-sm font-medium text-gray-900\">Alterar Email</label>\r\n                       <input v-model=\"user.email\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o novo email\" />\r\n                   </div>\r\n                 </div>\r\n                 <div v-if=\"modalFilter\">\r\n                   <div class=\"flex flex-col gap-1.5 text-center\">\r\n                     <div class=\"flex gap-2 items-center justify-center\">\r\n                         <div class=\"flex flex-col \">    \r\n                           <label for=\"startDate\" class=\"text-sm font-medium text-gray-700\">Data Início</label>\r\n                           <input type=\"date\" @input=\"filter.startDate = $event.target.value\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                         </div>\r\n                         <div class=\"flex flex-col\">\r\n                           <label for=\"endDate\" class=\"text-sm font-medium text-gray-700\">Data Final:</label>\r\n                           <input type=\"date\" @input=\"filter.endDate = $event.target.value\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                         </div>\r\n                         <div class=\"flex flex-col\">\r\n                           <label for=\"endDate\" class=\"text-sm font-medium text-gray-700\">Nome Proprietário</label>\r\n                           <input type=\"text\" placeholder=\"Digite o Nome\" v-model=\"filter.name\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                         </div>\r\n                         <div v-if=\"tooltip\" class=\"absolute z-10 inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm tooltip \">\r\n                                Média de Tempo Entre uma Revisão e Outra\r\n                                <div class=\"tooltip-arrow\" data-popper-arrow></div>\r\n                            </div>\r\n                         <div class=\"flex flex-col gap-2\">\r\n\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" \r\n                                @mouseover=\"tooltip = true\"\r\n                                @mouseleave=\"tooltip = false\"\r\n                                class=\"w-4\"\r\n                            >\r\n                                <path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>\r\n                            </svg>\r\n\r\n                            <input type=\"checkbox\" v-model=\"filter.average\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2 \">\r\n                        </div>\r\n\r\n                       </div>\r\n                     <div class=\"flex gap-2 items-center justify-center\">\r\n                       <div>\r\n                         <label  class=\"block text-sm font-medium text-gray-900 \">Marca com:</label>\r\n                         <select v-model=\"filter.brand\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\r\n                           <option value=\"all\" selected>Nenhuma Opção</option>\r\n                           <option value=\"maior\">Maior Número de Revisão</option>\r\n                           <option value=\"menor\">Menor Número de Revisão</option>\r\n                         </select>\r\n                       </div>\r\n                       <div>\r\n                         <label  class=\"block text-sm font-medium text-gray-900 \">Mecânico Responsável:</label>\r\n                         <select v-model=\"filter.worker\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\r\n                           <option value=\"all\" selected>Nenhuma Opção</option>\r\n                           <option v-for=\"worker in allWorkers\" :key=\"worker.id\" :value=\"worker.name\">\r\n                            {{ worker.name }}\r\n                          </option>\r\n                         </select>\r\n                       </div>\r\n   \r\n                     </div>\r\n                   </div>\r\n                   \r\n                 </div>\r\n     \r\n               </div>\r\n   \r\n               <div class=\"flex items-center justify-center justify-end p-2 border-t border-gray-200 rounded-b\">\r\n                 <div v-if=\"modalUser\">\r\n                   <button type=\"button\" class=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"addUser\">Criar Usuário</button>\r\n                 </div>\r\n                 <div v-if=\"modalUpdate\">\r\n                   <button type=\"button\" class=\"focus:outline-none text-white bg-[#337C24] hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"atualizar\">Gravar</button>\r\n                   <button type=\"button\" class=\"focus:outline-none text-white bg-[#FF3E30] hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"apagar\">Apagar</button>\r\n                 </div>\r\n                 <div v-if=\"modalFilter\">\r\n                   <button type=\"button\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\" @click=\"setFilter\">Aplicar Filtro</button>\r\n                 </div>\r\n               </div>\r\n           </div>\r\n       </div>\r\n   </div>\r\n    \r\n</template>\r\n <script>\r\n     \r\n     import http from '@/services/http.js';\r\n     import TitleView from '../components/Title/TitleView.vue';\r\n     import TableView from '../components/Table/TableView.vue';\r\n     import LoadingCircle from '../components/loading/LoadingCircle.vue';\r\n     \r\n     export default {\r\n       name: 'ListServices',\r\n       components: {\r\n        TitleView,TableView, LoadingCircle\r\n       },\r\n       data() {\r\n         return {\r\n           tooltip:false,\r\n           average: false,\r\n           filter: {},\r\n           loading: false,\r\n           services: [],\r\n           copyServices: [],\r\n           headers:[\"Nome do Serviço\",\"Valor\",\"Feito Em\",\"Mecânico Responsável\",\"Mais Detalhes\"],\r\n           sex: 'A',\r\n           startDate: '',\r\n           endDate: '',\r\n           allWorkers: [],\r\n           modalUpdate: false,\r\n           modalFilter: false,\r\n           modalUser: false,\r\n           openModal: true,\r\n           newUser:{},\r\n           modalContent:'',\r\n           service:{}\r\n     \r\n         };\r\n       },\r\n       methods: {\r\n       close(){\r\n         this.modalContent= '',\r\n         this.openModal = true;\r\n         this.modalUser = false;\r\n         this.modalFilter = false;\r\n         this.modalUpdate = false;\r\n       },\r\n       openFilterModal(){\r\n         this.modalFilter = true;\r\n         this.openModal = false;\r\n   \r\n       },\r\n       async getResults(){\r\n         try {\r\n          this.loading = true\r\n            const data = await http.get('/all-services');\r\n            const workers = await http.get('/workers-all');\r\n            this.allWorkers = workers.data.workers\r\n            this.setServices(data.data.services)\r\n            this.loading = false\r\n\r\n         } catch (error) {\r\n            this.loading = false\r\n            console.log(error.response)\r\n         }\r\n         \r\n         },\r\n         openUserModal(){\r\n           this.user = {\r\n             name: '',\r\n             password:'',\r\n             email:''        \r\n           },\r\n           this.modalUser= true;\r\n           this.openModal = false;\r\n         },\r\n         addUser(){\r\n           console.log(this.user)\r\n         },\r\n         showDetails(details) {\r\n           this.modalContent = details;\r\n           this.newUser.name = details.name;\r\n           this.newUser.email = details.email;\r\n           this.newUser.password = details.password;\r\n           this.user.name = details.name\r\n           this.user.email = details.email\r\n           this.openModal = false;\r\n           this.modalUpdate = true;\r\n         },\r\n         async atualizar(){\r\n             var count=0;\r\n           \r\n             if(this.modalContent.name!=this.user.name)\r\n             {\r\n               this.newUser.name = this.user.name;\r\n             }  \r\n             else count++\r\n             if(this.modalContent.email!=this.user.email && !/\\s/.test(this.user.email) )\r\n             {\r\n               this.newUser.email = this.user.email;\r\n             } else count++ \r\n             if(this.modalContent.password!=this.user.password && (this.user.password!='') )\r\n             {\r\n               this.newUser.password = this.user.password;\r\n             } else count++\r\n     \r\n             if(count != 3){\r\n             try {\r\n                this.loading = true\r\n                await http.put('/users/'+this.modalContent.id,this.newUser);\r\n                alert(\"Usuário Atualizado com sucesso\")\r\n              this.loading = false\r\n              window.location.reload();\r\n             } catch (error) {\r\n               this.loading = false\r\n             }\r\n             } \r\n      \r\n             \r\n           \r\n         },\r\n         async apagar(){\r\n           try {\r\n             this.loading = true\r\n               await http.delete('/users/'+this.modalContent.id,this.newUser);\r\n               alert(\"Usuário Apagado com sucesso\")\r\n               this.loading = false\r\n               window.location.reload();\r\n             } catch (error) {\r\n               this.loading = false\r\n             }\r\n         },\r\n         async setServices(array)\r\n         {\r\n         const promises = array.map(async (user) => {\r\n               let workerName = await this.getWorkerName(user.worker_id);\r\n               return {\r\n                \r\n                 name: user.name_service,\r\n                 email:\"R$\"+user.price,      \r\n                 created_at:  user.date_service,\r\n                 worker_name: workerName.name,\r\n                  implementar: {\r\n                   name: user.name,\r\n                   email: user.email,     \r\n                   id: user.id,\r\n                   password: user.password\r\n                 }\r\n     \r\n               };\r\n             }\r\n     \r\n           );\r\n             this.services = await Promise.all(promises);\r\n             this.copyServices = this.services\r\n         },\r\n         async setFilter(){\r\n          this.loading = true\r\n          if((Object.keys(this.filter).length === 0) || this.filter.startDate > this.filter.endDate)\r\n          {\r\n            alert('Por Favor Preencha Corretamente')\r\n          }\r\n          else\r\n          {\r\n      \r\n            let copy = this.services;\r\n            try {\r\n              const data = await http.post('/filter-services',this.filter)\r\n              if(this.filter.average)\r\n              {\r\n                this.headers = [\"Média entre Revisões\",\"Nome Carro\",\"Mais Detalhes\"];\r\n                \r\n                this.services = data.data.map((user,index)=>{\r\n                  return {\r\n                    \"avarage\": user.average_days,\r\n                    \"car_name\": user.car_name.model + \" \" + user.car_name.brand,\r\n                    implementar: {\r\n                      name: copy[index].name,\r\n\r\n                    }\r\n                  }\r\n                })\r\n              }\r\n              else\r\n              {\r\n                this.services  = this.copyServices\r\n                this.setServices(data.data)\r\n                this.headers = [\"Nome do Serviço\",\"Valor\",\"Feito Em\",\"Mecânico Responsável\",\"Mais Detalhes\"]\r\n              }\r\n            } catch (error) {\r\n              console.log(error)\r\n            }\r\n\r\n                  \r\n            this.close()\r\n          }\r\n          this.loading = false\r\n\r\n         },\r\n         async getWorkerName(id)\r\n         {\r\n            const data = await http.get('/worker/'+id);\r\n            return (data.data)\r\n         }\r\n       },\r\n       watch:{\r\n         minAge(newVal){\r\n           this.minAge = newVal.replace(/\\D+/g, '');\r\n         },\r\n         maxAge(newVal){\r\n           this.maxAge = newVal.replace(/\\D+/g, '');\r\n         },\r\n         filterName(newVal){\r\n           this.filterName = newVal.replace(/\\d+/g, '');\r\n         }\r\n       }\r\n       ,\r\n       mounted() {\r\n         this.getResults();\r\n       }\r\n     };\r\n     </script>\r\n     \r\n     "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}