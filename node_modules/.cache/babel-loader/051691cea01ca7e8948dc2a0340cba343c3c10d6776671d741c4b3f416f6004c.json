{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  title: \"\"\n};\nconst _hoisted_2 = {\n  class: \"flex justify-center mt-10\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TableView = _resolveComponent(\"TableView\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"title\", _hoisted_1)]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_TableView, {\n    headers: $data.tableHeaders,\n    body: $data.tableBody,\n    class: \"w-[50%]\"\n  }, null, 8 /* PROPS */, [\"headers\", \"body\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["title","class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_TableView","headers","$data","tableHeaders","body","tableBody"],"sources":["C:\\Users\\Usuário\\Documents\\projeto_diagnostico\\client\\src\\views\\DashBoard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n  <title :title=\"\"></title>\r\n  </div>\r\n  <div class=\" flex justify-center mt-10\">\r\n     <TableView :headers=\"tableHeaders\" :body=\"tableBody\" class=\"w-[50%]\"/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TableView from \"@/components/Table/TableView.vue\";\r\nimport http from '@/services/http.js';\r\nimport Title from \"../components/Title/Title.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TableView, Title\r\n  },\r\n  data() {\r\n    return {\r\n      tableHeaders: ['Nome Lotérica', 'Tipo Diagnóstico', 'Data de Criação', 'Valores'],\r\n      tableBody: []\r\n    };\r\n  },\r\n  methods: {\r\n    async getResults() {\r\n      try {\r\n        const response = await http.get('/results');\r\n        console.log(response.data);\r\n\r\n        this.tableBody = response.data.map(item => [\r\n          item.nomeLoterica,\r\n          item.tipoDiagnostico,\r\n          item.dataCriacao,\r\n          item.valores\r\n        ]);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getResults();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAEUA,KAAK,EAAN;AAAS;;EAEXC,KAAK,EAAC;AAA4B;;;uBAJzCC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAEM,cADNA,mBAAA,CAAyB,SAAzBC,UAAyB,E,GAEzBD,mBAAA,CAGM,OAHNE,UAGM,GAFHC,YAAA,CAAsEC,oBAAA;IAA1DC,OAAO,EAAEC,KAAA,CAAAC,YAAY;IAAGC,IAAI,EAAEF,KAAA,CAAAG,SAAS;IAAEZ,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}