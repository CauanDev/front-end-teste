{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"userChart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\Users\\Usuário\\Documents\\teste-pratico\\front-end-teste\\src\\components\\chards\\SalaryChardSplit.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <canvas ref=\"userChart\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Chart, registerables } from 'chart.js';\r\n  \r\n  Chart.register(...registerables);\r\n  \r\n  export default {\r\n    name: 'SalaryChartSplit',\r\n    props: {\r\n      users: {\r\n        type: Array,\r\n        required: true,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        chart: null,\r\n      };\r\n    },\r\n    watch: {\r\n      users() {\r\n        if (this.chart) {\r\n          this.chart.destroy();\r\n        }\r\n        this.createChart();\r\n      },\r\n    },\r\n    mounted() {\r\n      this.createChart();\r\n    },\r\n    methods: {\r\n      createChart() {\r\n        const maleUsers = this.users.filter(user => user.implementar.sex === 'M');\r\n        const femaleUsers = this.users.filter(user => user.implementar.sex === 'F');\r\n  \r\n        const totalMaleSalary = maleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\r\n        const totalFemaleSalary = femaleUsers.reduce((sum, user) => sum + parseFloat(user.implementar.salary), 0);\r\n  \r\n        const averageMaleSalary = maleUsers.length ? totalMaleSalary / maleUsers.length : 0;\r\n        const averageFemaleSalary = femaleUsers.length ? totalFemaleSalary / femaleUsers.length : 0;\r\n  \r\n        const ctx = this.$refs.userChart.getContext('2d');\r\n  \r\n        this.chart = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: ['Masculino', 'Feminino'],\r\n            datasets: [{\r\n              label: 'Média Salarial por Sexo',\r\n              data: [averageMaleSalary, averageFemaleSalary],\r\n              backgroundColor: ['#007bff', '#dc3545'],\r\n              borderColor: ['#007bff', '#dc3545'],\r\n              borderWidth: 1,\r\n            }],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>"],"mappings":";;EAEcA,GAAG,EAAC;AAAW;;uBADzBC,mBAAA,CAEM,cADJC,mBAAA,CAAiC,UAAjCC,UAAiC,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}