{"ast":null,"code":"import http from '@/services/http.js';\nimport TitleView from '../components/Title/TitleView.vue';\nimport TableView from '../components/Table/TableView.vue';\nimport { format } from 'date-fns';\nimport LoadingCircle from '../components/loading/LoadingCircle.vue';\nimport TableNormal from '../components/Table/TableNormal.vue';\nexport default {\n  name: 'ListOwners',\n  components: {\n    TitleView,\n    TableView,\n    LoadingCircle,\n    TableNormal\n  },\n  data() {\n    return {\n      maxAge: '',\n      minAge: '',\n      filterName: '',\n      body: {},\n      loading: false,\n      users: [],\n      sex: 'A',\n      startDate: '',\n      tableNormal: false,\n      endDate: '',\n      modalUpdate: false,\n      modalFilter: false,\n      modalUser: false,\n      openModal: true,\n      newUser: {},\n      modalContent: '',\n      user: {},\n      owner: {},\n      filter: {}\n    };\n  },\n  methods: {\n    openChardModal() {\n      this.modalChart = true;\n      this.openModal = false;\n    },\n    close() {\n      this.user = {};\n      this.modalContent = '', this.openModal = true;\n      this.modalUser = false;\n      this.modalFilter = false;\n      this.modalUpdate = false;\n      this.tableNormal = false;\n      this.modalChart = false;\n    },\n    openFilterModal() {\n      this.modalFilter = true;\n      this.openModal = false;\n    },\n    setUsers() {},\n    async getResults() {\n      try {\n        this.loading = true;\n        const {\n          data\n        } = await http.get('/owners-all');\n        const owners = data.owners;\n        const promises = owners.map(async user => {\n          const body = await this.getBody(user.id);\n          return {\n            name: user.name,\n            email: user.email,\n            created_at: format(new Date(user.created_at), 'dd/MM/yyyy'),\n            implementar: {\n              name: user.name,\n              email: user.email,\n              id: user.id,\n              sex: user.sex,\n              age: user.age,\n              adress: user.adress,\n              body: body\n            }\n          };\n        });\n        this.users = await Promise.all(promises);\n        this.loading = false;\n      } catch (error) {\n        console.error('Erro ao obter os resultados:', error);\n        this.loading = false;\n      }\n    },\n    async getBody(id) {\n      try {\n        const {\n          data\n        } = await http.get(`/cars-all/${id}`);\n        return data.data;\n      } catch (error) {\n        console.error(`Erro ao obter body para id ${id}:`, error);\n        throw error;\n      }\n    },\n    openUserModal() {\n      this.user = {}, this.modalUser = true;\n      this.openModal = false;\n    },\n    async addUser() {\n      this.loading = true;\n      if (this.user.name && this.user.age && this.user.email && this.user.sex && this.user.adress) {\n        try {\n          await http.post('/owners-register', this.user);\n          window.location.reload();\n          this.loading = false;\n        } catch (error) {\n          this.loading = false;\n        }\n      }\n    },\n    showDetails(details) {\n      this.modalContent = details;\n      console.log(this.modalContent);\n      this.owner = {\n        ...details\n      };\n      this.newUser = this.owner;\n      console.log(this.modalContent.body.cars);\n      this.openModal = false;\n      this.modalUpdate = true;\n    },\n    async atualizar() {\n      if (JSON.stringify(this.modalContent) == JSON.stringify(this.owner)) {\n        alert(\"Faça uma Alteração Primeiro!\");\n      } else {\n        if (this.modalContent.name != this.owner.name) {\n          this.newUser.name = this.owner.name;\n        }\n        if (this.modalContent.email != this.owner.email) {\n          this.newUser.email = this.owner.email;\n        }\n        if (this.modalContent.sex != this.owner.sex) {\n          this.newUser.sex = this.owner.sex;\n        }\n        if (this.modalContent.age != this.owner.age) {\n          this.newUser.age = this.owner.age;\n        }\n        if (this.modalContent.adress != this.owner.adress) {\n          this.newUser.adress = this.owner.adress;\n        }\n        try {\n          this.loading = true;\n          await http.put('/update-owner', this.newUser);\n          window.location.reload();\n          alert(\"Funcionário Atualizado com sucesso\");\n          this.loading = false;\n        } catch (error) {\n          console.log(error);\n          this.loading = false;\n        }\n      }\n    },\n    async apagar() {\n      this.loading = true;\n      try {\n        await http.delete('/delete-owner/' + this.modalContent.id, this.newUser);\n        alert(\"Usuário Apagado com sucesso\");\n        this.loading = false;\n        window.location.reload();\n      } catch (error) {\n        this.loading = false;\n      }\n    },\n    async setFilter() {\n      if (this.filter != {} || this.filter.maxDate < this.filter.minDate || this.filter.maxAge < this.filter.minAge) {\n        alert(\"Por Favor Digite Corretamente\");\n      }\n    }\n  },\n  watch: {\n    minAge(newVal) {\n      this.minAge = newVal.replace(/\\D+/g, '');\n    },\n    maxAge(newVal) {\n      this.maxAge = newVal.replace(/\\D+/g, '');\n    },\n    filterName(newVal) {\n      this.filterName = newVal.replace(/\\d+/g, '');\n    }\n  },\n  mounted() {\n    this.getResults();\n  }\n};","map":{"version":3,"names":["http","TitleView","TableView","format","LoadingCircle","TableNormal","name","components","data","maxAge","minAge","filterName","body","loading","users","sex","startDate","tableNormal","endDate","modalUpdate","modalFilter","modalUser","openModal","newUser","modalContent","user","owner","filter","methods","openChardModal","modalChart","close","openFilterModal","setUsers","getResults","get","owners","promises","map","getBody","id","email","created_at","Date","implementar","age","adress","Promise","all","error","console","openUserModal","addUser","post","window","location","reload","showDetails","details","log","cars","atualizar","JSON","stringify","alert","put","apagar","delete","setFilter","maxDate","minDate","watch","newVal","replace","mounted"],"sources":["C:\\Users\\Usuário\\Documents\\teste-pratico\\front-end-teste\\src\\views\\ListOwners.vue"],"sourcesContent":["<template>\r\n <LoadingCircle v-if=\"loading\"/>\r\n  \r\n  <div>\r\n  <TitleView title=\"Proprietários\"/>\r\n  </div>\r\n  <div>\r\n    <div class=\"flex justify-center w-full mt-10\">\r\n      <button type=\"button\" class=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"openUserModal\">Adicionar Propietário</button> \r\n      <button type=\"button\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"openFilterModal\">Aplicar Filtros</button>\r\n      <button type=\"button\" class=\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2\" @click=\"openChardModal\">Visualizar Gráficos</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex justify-center max-h-[420px] overflow-y-auto\">\r\n    <TableView :headers=\"['Nome','Email','Criado Em','Ver Detalhes']\" :body=\"users\" @showDetails=\"showDetails\" class=\"w-[50%]\"/>  \r\n  </div>\r\n\r\n  <div id=\"default-modal\" :class=\"{'hidden': openModal}\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n    <div class=\"relative p-4 w-full max-w-2xl max-h-full\">\r\n        <div class=\"relative bg-white rounded-lg shadow\" >\r\n            <div class=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n              <div v-if=\"modalFilter\">\r\n                <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                  Aplicar Filtros\r\n                </h3>                \r\n              </div>\r\n              <div v-if=\"modalUser\">\r\n                <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                  Criar Propietário\r\n                </h3>                \r\n              </div>\r\n              <div v-if=\"modalUpdate\">\r\n                <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                  Alterar {{ modalContent.name }}\r\n                </h3>                \r\n              </div>\r\n\r\n              <div v-if=\"modalChart\">\r\n                   <h3 class=\"text-xl font-semibold text-gray-900\">\r\n                    Visualizar Gráficos\r\n                  </h3> \r\n                  <div class=\"flex gap-2\">\r\n                    Aplicar Gráficos:\r\n                    <div>\r\n                      <input \r\n                        v-model=\"allChecked\"\r\n                        @change=\"toggleCheckbox('allChecked')\"\r\n                        type=\"checkbox\" value=\"\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\">\r\n                        <label  class=\"ms-2 text-sm font-medium\">Todos</label>\r\n                    </div>\r\n                    <div>\r\n                      <input \r\n                        v-model=\"filterChecked\"\r\n                        @change=\"toggleCheckbox('filterChecked')\"\r\n                        type=\"checkbox\" value=\"\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\">\r\n                        <label  class=\"ms-2 text-sm font-medium\">Filtro</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button type=\"button\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-black-200 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center\" data-modal-hide=\"default-modal\" @click=\"close\">\r\n                    <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                        <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\" />\r\n                    </svg>\r\n                    <span class=\"sr-only\" >Close modal</span>\r\n                </button>\r\n            </div>            \r\n            <div class=\"p-4 md:p-5 space-y-4\">\r\n              <div v-if=\"modalUser\"> \r\n                <div>\r\n                    <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Nome</label>\r\n                    <input v-model=\"user.name\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o nome\" />\r\n                </div>\r\n                <div>\r\n                    <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Email</label>\r\n                    <input v-model=\"user.email\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o email\" />\r\n                </div>\r\n                <div>\r\n                    <label  class=\"block text-sm font-medium text-gray-900 \">Selecione o Sexo</label>\r\n                    <select v-model=\"user.sex\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\r\n                      <option value=\"M\">Masculino</option>\r\n                      <option value=\"F\">Feminino</option>\r\n                    </select>\r\n                </div>\r\n                  <div>\r\n                    <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite o Endereço</label>\r\n                    <input v-model=\"user.adress\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o Endereço\" />\r\n                  </div>\r\n                  <div>\r\n                    <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite a Idade</label>\r\n                    <input v-model=\"user.age\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite a Idade\" />\r\n                  </div>\r\n              </div>\r\n              <div v-if=\"modalUpdate\">\r\n                <div class=\"flex gap-[67%] w-full\">\r\n               <h2>Carros do Proprietário</h2>     \r\n                <svg data-accordion-icon class=\"w-4 h-4 rotate-180 shrink-0 mt-2 cursor-pointer\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 10 6\" @click=\"tableNormal = !tableNormal\">\r\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5 5 1 1 5\"/>\r\n                </svg>             \r\n                </div>\r\n                <div v-if=\"tableNormal\" class=\"absolute z-18 w-[95%]\">\r\n                  <h1 class=\"bg-white\">Valor Total Gasto:R${{modalContent.body.totalPrice}}</h1>\r\n                  <TableNormal \r\n                  :headers = \"['Marca','Última Revisão']\"  \r\n                  :body=\"modalContent.body.cars\"/>                \r\n                </div>\r\n\r\n                \r\n                \r\n                <div>\r\n                    <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Nome</label>\r\n                    <input v-model=\"owner.name\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o nome\" />\r\n                </div>\r\n                <div>\r\n                    <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite Email</label>\r\n                    <input v-model=\"owner.email\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o email\" />\r\n                </div>\r\n                <div>\r\n                    <label  class=\"block text-sm font-medium text-gray-900 \">Selecione o Sexo</label>\r\n                    <select v-model=\"owner.sex\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\r\n                      <option value=\"M\">Masculino</option>\r\n                      <option value=\"F\">Feminino</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                  <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite o Endereço</label>\r\n                  <input v-model=\"owner.adress\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite o Endereço\" />\r\n                </div>\r\n                <div>\r\n                  <label class=\"block mb-2 text-sm font-medium text-gray-900\">Digite a Idade</label>\r\n                  <input v-model=\"owner.age\" type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Digite a Idade\" />\r\n                </div>\r\n              </div>\r\n              <div v-if=\"modalFilter\">\r\n                <div class=\"flex flex-col gap-1.5 text-center\">\r\n                  <div class=\"flex gap-2 items-center justify-center\">\r\n                      <div class=\"flex flex-col \">    \r\n                        <label for=\"startDate\" class=\"text-sm font-medium text-gray-700\">Data Início</label>\r\n                        <input type=\"date\" @input=\"filter.startDate = $event.target.value\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                      </div>\r\n                      <div class=\"flex flex-col\">\r\n                        <label for=\"endDate\" class=\"text-sm font-medium text-gray-700\">Data Final:</label>\r\n                        <input type=\"date\" @input=\"filter.endDate = $event.target.value\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                      </div>\r\n                      <div class=\"flex flex-col\">\r\n                        <label for=\"endDate\" class=\"text-sm font-medium text-gray-700\">Nome Proprietário</label>\r\n                        <input type=\"text\" placeholder=\"Digite o Nome\" v-model=\"filter.name\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                      </div>\r\n                    </div>\r\n                  <div class=\"flex gap-2 items-center justify-center\">\r\n                    <div>\r\n                      <label  class=\"block text-sm font-medium text-gray-900 \">Selecione o Sexo</label>\r\n                      <select v-model=\"filter.sex\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\r\n                        <option value=\"A\" selected>Todos as opções</option>\r\n                        <option value=\"M\">Masculino</option>\r\n                        <option value=\"F\">Feminino</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>    \r\n                        <label for=\"startDate\" class=\"text-sm font-medium text-gray-700\">Idade Mínima</label>\r\n                        <input type=\"text\" v-model=\"filter.minAge\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                    </div>\r\n                    <div>    \r\n                        <label for=\"startDate\" class=\"text-sm font-medium text-gray-700\">Idade Máxima</label>\r\n                        <input type=\"text\" v-model=\"filter.maxAge\" class=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm\">      \r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n  \r\n            </div>\r\n\r\n            <div class=\"flex items-center justify-center justify-end p-2 border-t border-gray-200 rounded-b\">\r\n              <div v-if=\"modalUser\">\r\n                <button type=\"button\" class=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"addUser\">Criar Usuário</button>\r\n              </div>\r\n              <div v-if=\"modalUpdate\">\r\n                <button type=\"button\" class=\"focus:outline-none text-white bg-[#337C24] hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"atualizar\">Gravar</button>\r\n                <button type=\"button\" class=\"focus:outline-none text-white bg-[#FF3E30] hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\" @click=\"apagar\">Apagar</button>\r\n              </div>\r\n              <div v-if=\"modalFilter\">\r\n                <button type=\"button\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\" @click=\"setFilter\">Aplicar Filtro</button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n \r\n    \r\n  \r\n  \r\n</template>  \r\n<script>\r\n  \r\n  import http from '@/services/http.js';\r\n  import TitleView from '../components/Title/TitleView.vue';\r\n  import TableView from '../components/Table/TableView.vue';\r\n  import { format } from 'date-fns'; \r\n  import LoadingCircle from '../components/loading/LoadingCircle.vue';\r\n  import TableNormal from '../components/Table/TableNormal.vue';\r\n  \r\n  export default {\r\n    name: 'ListOwners',\r\n    components: {\r\n     TitleView,TableView, LoadingCircle,TableNormal\r\n    },\r\n    data() {\r\n      return {\r\n        maxAge: '',\r\n        minAge: '',\r\n        filterName: '',\r\n        body: {},\r\n        loading: false,\r\n        users: [],\r\n        sex: 'A',\r\n        startDate: '',\r\n        tableNormal: false,\r\n        endDate: '',\r\n        modalUpdate: false,\r\n        modalFilter: false,\r\n        modalUser: false,\r\n        openModal: true,\r\n        newUser:{},\r\n        modalContent:'',\r\n        user: {},\r\n        owner: {},\r\n        filter:{}\r\n  \r\n      };\r\n    },\r\n    methods: {        \r\n    openChardModal(){\r\n      this.modalChart = true;\r\n      this.openModal = false;\r\n      },\r\n    close(){        \r\n      this.user = {};\r\n      this.modalContent= '',\r\n      this.openModal = true;\r\n      this.modalUser = false;\r\n      this.modalFilter = false;\r\n      this.modalUpdate = false;\r\n      this.tableNormal = false;\r\n      this.modalChart = false;\r\n    },\r\n    openFilterModal(){\r\n      this.modalFilter = true;\r\n      this.openModal = false;\r\n\r\n    },\r\n    setUsers(){\r\n\r\n    },\r\n    async getResults() {\r\n  try {\r\n    this.loading = true;\r\n    const { data } = await http.get('/owners-all');\r\n    const owners = data.owners;\r\n\r\n    const promises = owners.map(async (user) => {\r\n      const body = await this.getBody(user.id); \r\n      \r\n      return {\r\n        name: user.name,\r\n        email: user.email,\r\n        created_at: format(new Date(user.created_at), 'dd/MM/yyyy'),\r\n        implementar: {\r\n          name: user.name,\r\n          email: user.email,\r\n          id: user.id,\r\n          sex: user.sex,\r\n          age: user.age,\r\n          adress: user.adress,\r\n          body: body\r\n        }\r\n      };\r\n    });\r\n\r\n    this.users = await Promise.all(promises);\r\n\r\n    this.loading = false;\r\n  } catch (error) {\r\n    console.error('Erro ao obter os resultados:', error);\r\n    this.loading = false;\r\n  }\r\n},\r\n\r\nasync getBody(id) {\r\n  try {\r\n    const { data } = await http.get(`/cars-all/${id}`);\r\n    return data.data;\r\n  } catch (error) {\r\n    console.error(`Erro ao obter body para id ${id}:`, error);\r\n    throw error;\r\n  }\r\n},\r\n      openUserModal(){\r\n        this.user = {\r\n     \r\n        },\r\n        this.modalUser= true;\r\n        this.openModal = false;\r\n      },\r\n      async addUser(){\r\n        this.loading = true;\r\n        if(this.user.name && this.user.age&&this.user.email&&this.user.sex&&this.user.adress)\r\n        {\r\n          try {\r\n            await http.post('/owners-register',this.user)\r\n            window.location.reload()     \r\n            this.loading = false;\r\n       \r\n          } catch (error) {\r\n            this.loading = false;\r\n\r\n          }\r\n\r\n        }\r\n      },\r\n      showDetails(details) {\r\n        this.modalContent = details;\r\n        console.log(this.modalContent)\r\n        this.owner = {... details}\r\n        this.newUser = this.owner\r\n        console.log(this.modalContent.body.cars)\r\n        this.openModal = false;\r\n        this.modalUpdate = true;\r\n      },\r\n      async atualizar(){\r\n        if(JSON.stringify(this.modalContent) == JSON.stringify(this.owner))\r\n            {\r\n              alert(\"Faça uma Alteração Primeiro!\")\r\n            }\r\n            else\r\n            {\r\n              if(this.modalContent.name!=this.owner.name)\r\n              {\r\n                this.newUser.name = this.owner.name;\r\n              }                \r\n              if(this.modalContent.email!=this.owner.email)\r\n              {\r\n                this.newUser.email = this.owner.email;\r\n              } \r\n              if(this.modalContent.sex!=this.owner.sex)\r\n              {\r\n                this.newUser.sex = this.owner.sex;\r\n              }              \r\n              if(this.modalContent.age!=this.owner.age)\r\n              {\r\n                this.newUser.age = this.owner.age;\r\n              } \r\n              if(this.modalContent.adress!=this.owner.adress)\r\n              {\r\n                this.newUser.adress = this.owner.adress;\r\n              } \r\n              try {\r\n              this.loading = true\r\n              await http.put('/update-owner',this.newUser);\r\n              window.location.reload()\r\n              alert(\"Funcionário Atualizado com sucesso\")\r\n              this.loading = false\r\n             } catch (error) {\r\n              console.log(error)\r\n               this.loading = false\r\n             }\r\n            }\r\n   \r\n          \r\n        \r\n      },\r\n      async apagar(){\r\n        this.loading = true\r\n        try {\r\n            await http.delete('/delete-owner/'+this.modalContent.id,this.newUser);\r\n            alert(\"Usuário Apagado com sucesso\")\r\n            this.loading = false\r\n            window.location.reload();\r\n          } catch (error) {\r\n            this.loading = false\r\n          }\r\n      },\r\n      async setFilter(){\r\n        if(this.filter != {} || this.filter.maxDate < this.filter.minDate ||  this.filter.maxAge < this.filter.minAge)\r\n        {\r\n          alert(\"Por Favor Digite Corretamente\")\r\n        }\r\n      }\r\n      },\r\n    watch:{\r\n      minAge(newVal){\r\n        this.minAge = newVal.replace(/\\D+/g, '');\r\n      },\r\n      maxAge(newVal){\r\n        this.maxAge = newVal.replace(/\\D+/g, '');\r\n      },\r\n      filterName(newVal){\r\n        this.filterName = newVal.replace(/\\d+/g, '');\r\n      }\r\n    }\r\n    ,\r\n    mounted() {\r\n      this.getResults();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  "],"mappings":"AAmME,OAAOA,IAAG,MAAO,oBAAoB;AACrC,OAAOC,SAAQ,MAAO,mCAAmC;AACzD,OAAOC,SAAQ,MAAO,mCAAmC;AACzD,SAASC,MAAK,QAAS,UAAU;AACjC,OAAOC,aAAY,MAAO,yCAAyC;AACnE,OAAOC,WAAU,MAAO,qCAAqC;AAE7D,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACXN,SAAS;IAACC,SAAS;IAAEE,aAAa;IAACC;EACpC,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,CAAC,CAAC;MACRC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,GAAG;MACRC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAC,CAAC,CAAC;MACVC,YAAY,EAAC,EAAE;MACfC,IAAI,EAAE,CAAC,CAAC;MACRC,KAAK,EAAE,CAAC,CAAC;MACTC,MAAM,EAAC,CAAC;IAEV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACTC,cAAcA,CAAA,EAAE;MACd,IAAI,CAACC,UAAS,GAAI,IAAI;MACtB,IAAI,CAACR,SAAQ,GAAI,KAAK;IACtB,CAAC;IACHS,KAAKA,CAAA,EAAE;MACL,IAAI,CAACN,IAAG,GAAI,CAAC,CAAC;MACd,IAAI,CAACD,YAAY,GAAE,EAAE,EACrB,IAAI,CAACF,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACD,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACD,WAAU,GAAI,KAAK;MACxB,IAAI,CAACD,WAAU,GAAI,KAAK;MACxB,IAAI,CAACF,WAAU,GAAI,KAAK;MACxB,IAAI,CAACa,UAAS,GAAI,KAAK;IACzB,CAAC;IACDE,eAAeA,CAAA,EAAE;MACf,IAAI,CAACZ,WAAU,GAAI,IAAI;MACvB,IAAI,CAACE,SAAQ,GAAI,KAAK;IAExB,CAAC;IACDW,QAAQA,CAAA,EAAE,CAEV,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,CAACrB,OAAM,GAAI,IAAI;QACnB,MAAM;UAAEL;QAAK,IAAI,MAAMR,IAAI,CAACmC,GAAG,CAAC,aAAa,CAAC;QAC9C,MAAMC,MAAK,GAAI5B,IAAI,CAAC4B,MAAM;QAE1B,MAAMC,QAAO,GAAID,MAAM,CAACE,GAAG,CAAC,MAAOb,IAAI,IAAK;UAC1C,MAAMb,IAAG,GAAI,MAAM,IAAI,CAAC2B,OAAO,CAACd,IAAI,CAACe,EAAE,CAAC;UAExC,OAAO;YACLlC,IAAI,EAAEmB,IAAI,CAACnB,IAAI;YACfmC,KAAK,EAAEhB,IAAI,CAACgB,KAAK;YACjBC,UAAU,EAAEvC,MAAM,CAAC,IAAIwC,IAAI,CAAClB,IAAI,CAACiB,UAAU,CAAC,EAAE,YAAY,CAAC;YAC3DE,WAAW,EAAE;cACXtC,IAAI,EAAEmB,IAAI,CAACnB,IAAI;cACfmC,KAAK,EAAEhB,IAAI,CAACgB,KAAK;cACjBD,EAAE,EAAEf,IAAI,CAACe,EAAE;cACXzB,GAAG,EAAEU,IAAI,CAACV,GAAG;cACb8B,GAAG,EAAEpB,IAAI,CAACoB,GAAG;cACbC,MAAM,EAAErB,IAAI,CAACqB,MAAM;cACnBlC,IAAI,EAAEA;YACR;UACF,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACE,KAAI,GAAI,MAAMiC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;QAExC,IAAI,CAACxB,OAAM,GAAI,KAAK;MACtB,EAAE,OAAOoC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAACpC,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED,MAAM0B,OAAOA,CAACC,EAAE,EAAE;MAChB,IAAI;QACF,MAAM;UAAEhC;QAAK,IAAI,MAAMR,IAAI,CAACmC,GAAG,CAAC,aAAaK,EAAE,EAAE,CAAC;QAClD,OAAOhC,IAAI,CAACA,IAAI;MAClB,EAAE,OAAOyC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8BT,EAAE,GAAG,EAAES,KAAK,CAAC;QACzD,MAAMA,KAAK;MACb;IACF,CAAC;IACKE,aAAaA,CAAA,EAAE;MACb,IAAI,CAAC1B,IAAG,GAAI,CAEZ,CAAC,EACD,IAAI,CAACJ,SAAS,GAAE,IAAI;MACpB,IAAI,CAACC,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAM8B,OAAOA,CAAA,EAAE;MACb,IAAI,CAACvC,OAAM,GAAI,IAAI;MACnB,IAAG,IAAI,CAACY,IAAI,CAACnB,IAAG,IAAK,IAAI,CAACmB,IAAI,CAACoB,GAAG,IAAE,IAAI,CAACpB,IAAI,CAACgB,KAAK,IAAE,IAAI,CAAChB,IAAI,CAACV,GAAG,IAAE,IAAI,CAACU,IAAI,CAACqB,MAAM,EACpF;QACE,IAAI;UACF,MAAM9C,IAAI,CAACqD,IAAI,CAAC,kBAAkB,EAAC,IAAI,CAAC5B,IAAI;UAC5C6B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;UACvB,IAAI,CAAC3C,OAAM,GAAI,KAAK;QAEtB,EAAE,OAAOoC,KAAK,EAAE;UACd,IAAI,CAACpC,OAAM,GAAI,KAAK;QAEtB;MAEF;IACF,CAAC;IACD4C,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAAClC,YAAW,GAAIkC,OAAO;MAC3BR,OAAO,CAACS,GAAG,CAAC,IAAI,CAACnC,YAAY;MAC7B,IAAI,CAACE,KAAI,GAAI;QAAC,GAAIgC;MAAO;MACzB,IAAI,CAACnC,OAAM,GAAI,IAAI,CAACG,KAAI;MACxBwB,OAAO,CAACS,GAAG,CAAC,IAAI,CAACnC,YAAY,CAACZ,IAAI,CAACgD,IAAI;MACvC,IAAI,CAACtC,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACH,WAAU,GAAI,IAAI;IACzB,CAAC;IACD,MAAM0C,SAASA,CAAA,EAAE;MACf,IAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACvC,YAAY,KAAKsC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACrC,KAAK,CAAC,EAC9D;QACEsC,KAAK,CAAC,8BAA8B;MACtC,OAEA;QACE,IAAG,IAAI,CAACxC,YAAY,CAAClB,IAAI,IAAE,IAAI,CAACoB,KAAK,CAACpB,IAAI,EAC1C;UACE,IAAI,CAACiB,OAAO,CAACjB,IAAG,GAAI,IAAI,CAACoB,KAAK,CAACpB,IAAI;QACrC;QACA,IAAG,IAAI,CAACkB,YAAY,CAACiB,KAAK,IAAE,IAAI,CAACf,KAAK,CAACe,KAAK,EAC5C;UACE,IAAI,CAAClB,OAAO,CAACkB,KAAI,GAAI,IAAI,CAACf,KAAK,CAACe,KAAK;QACvC;QACA,IAAG,IAAI,CAACjB,YAAY,CAACT,GAAG,IAAE,IAAI,CAACW,KAAK,CAACX,GAAG,EACxC;UACE,IAAI,CAACQ,OAAO,CAACR,GAAE,GAAI,IAAI,CAACW,KAAK,CAACX,GAAG;QACnC;QACA,IAAG,IAAI,CAACS,YAAY,CAACqB,GAAG,IAAE,IAAI,CAACnB,KAAK,CAACmB,GAAG,EACxC;UACE,IAAI,CAACtB,OAAO,CAACsB,GAAE,GAAI,IAAI,CAACnB,KAAK,CAACmB,GAAG;QACnC;QACA,IAAG,IAAI,CAACrB,YAAY,CAACsB,MAAM,IAAE,IAAI,CAACpB,KAAK,CAACoB,MAAM,EAC9C;UACE,IAAI,CAACvB,OAAO,CAACuB,MAAK,GAAI,IAAI,CAACpB,KAAK,CAACoB,MAAM;QACzC;QACA,IAAI;UACJ,IAAI,CAACjC,OAAM,GAAI,IAAG;UAClB,MAAMb,IAAI,CAACiE,GAAG,CAAC,eAAe,EAAC,IAAI,CAAC1C,OAAO,CAAC;UAC5C+B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;UACvBQ,KAAK,CAAC,oCAAoC;UAC1C,IAAI,CAACnD,OAAM,GAAI,KAAI;QACpB,EAAE,OAAOoC,KAAK,EAAE;UACfC,OAAO,CAACS,GAAG,CAACV,KAAK;UAChB,IAAI,CAACpC,OAAM,GAAI,KAAI;QACrB;MACD;IAIN,CAAC;IACD,MAAMqD,MAAMA,CAAA,EAAE;MACZ,IAAI,CAACrD,OAAM,GAAI,IAAG;MAClB,IAAI;QACA,MAAMb,IAAI,CAACmE,MAAM,CAAC,gBAAgB,GAAC,IAAI,CAAC3C,YAAY,CAACgB,EAAE,EAAC,IAAI,CAACjB,OAAO,CAAC;QACrEyC,KAAK,CAAC,6BAA6B;QACnC,IAAI,CAACnD,OAAM,GAAI,KAAI;QACnByC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,EAAE,OAAOP,KAAK,EAAE;QACd,IAAI,CAACpC,OAAM,GAAI,KAAI;MACrB;IACJ,CAAC;IACD,MAAMuD,SAASA,CAAA,EAAE;MACf,IAAG,IAAI,CAACzC,MAAK,IAAK,CAAC,KAAK,IAAI,CAACA,MAAM,CAAC0C,OAAM,GAAI,IAAI,CAAC1C,MAAM,CAAC2C,OAAM,IAAM,IAAI,CAAC3C,MAAM,CAAClB,MAAK,GAAI,IAAI,CAACkB,MAAM,CAACjB,MAAM,EAC7G;QACEsD,KAAK,CAAC,+BAA+B;MACvC;IACF;EACA,CAAC;EACHO,KAAK,EAAC;IACJ7D,MAAMA,CAAC8D,MAAM,EAAC;MACZ,IAAI,CAAC9D,MAAK,GAAI8D,MAAM,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC1C,CAAC;IACDhE,MAAMA,CAAC+D,MAAM,EAAC;MACZ,IAAI,CAAC/D,MAAK,GAAI+D,MAAM,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC1C,CAAC;IACD9D,UAAUA,CAAC6D,MAAM,EAAC;MAChB,IAAI,CAAC7D,UAAS,GAAI6D,MAAM,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC9C;EACF;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxC,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}